name: Windows Build

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        python-version: ['3.12']
    
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        pip install tzdata
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --clean --windows-dll-fix main.spec
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}-py${{ matrix.python-version }}
        release_name: Release v${{ github.run_number }} (Python ${{ matrix.python-version }})
        draft: false
        prerelease: false
        
    - name: Zip main.exe only
      run: |
        New-Item -ItemType Directory -Path temp
        Copy-Item -Path dist/main.exe -Destination temp/
        Compress-Archive -Path temp/main.exe -DestinationPath windows-build-py${{ matrix.python-version }}.zip
        Remove-Item -Path temp -Recurse
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-build-py${{ matrix.python-version }}.zip
        asset_name: windows-build-py${{ matrix.python-version }}.zip
        asset_content_type: application/zip 